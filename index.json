[{"categories":null,"content":"Go程序结构 ","date":"2021-07-23","objectID":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/:0:0","tags":null,"title":"Go语言结构","uri":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/"},{"categories":null,"content":"1.命名 ​ Go语言中的函数名、变量名、常量名、类型名、语句标号和包名等所有的命名，遵循如下命名规则: ​ 即必须以一个字母或下划线开头，后面可以跟任意数量的字母、数字或下划线。并且命名区分大小写，且不能为Go语言中的关键字并且要尽量避开预定义的名字，如下图： ​ 在Go中，命名可以影响到该变量的可见性。对于包级名字来讲，若该变量命名首字母大写，则此变量相对其他.go文件是可导入的，如果为小写，相对于其他.go文件则是不可导入的。可以对比Java中的public与private进行理解。 ","date":"2021-07-23","objectID":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/:1:0","tags":null,"title":"Go语言结构","uri":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/"},{"categories":null,"content":"2.声明 ​ Go中主要有四种类型的声明语句:var、const、type、和func，分别对应变量、常量、类型和函数实体对象的声明。 ​ 常量声明: const LENGTH = 1 ​ 变量声明: var 变量名 类型 = 表达式 ​ var i,j,k int //i,j,k均为int类型,且取值对应int零值-\u003e0 ​ var b,f,s = true,2.3,\"four\" //变量类型依次为bool,float64,string ​ 在函数内部，还可以通过简短变量声明的形式初始化局部变量: length := 1 //等价于两条语句 1-声明变量 2-给变量赋值 ​ 创建变量还可以通过内建的new函数： p := new(int) //*int类型的p，指向匿名的int变量 ​ fmt.Println(*p) //0 ​ *p = 2。//2 ​ fmt.Println(*p) // 2 ​ 创建一个新的类型，使用如下的语句: ​ type 类型名字 底层类型 ​ 如下，分别创建Celsius和Fahrenheit类型 type Celsius float64 //摄氏温度 ​ type Fahrenheit float64 //华式温度 ","date":"2021-07-23","objectID":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/:2:0","tags":null,"title":"Go语言结构","uri":"/go%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/"},{"categories":null,"content":"Go 入门 ","date":"2021-07-23","objectID":"/go-%E5%85%A5%E9%97%A8/:0:0","tags":null,"title":"Go入门","uri":"/go-%E5%85%A5%E9%97%A8/"},{"categories":null,"content":"1.1 Hello World helloworld.go package main import \"fmt\" func main(){ ​ fmt.Println(\"Hello World\"); } ​ Go是一门编译型语言，Go语言的工具链将源代码及其依赖转换成计算机的机器指令，Go语言提供的工具都可以通过一个单独的命令go来调用。例如： go run helloworld.go //针对一次性实验 helloworld.go为文件名 ​ 此时控制台会输出Hello World。 ​ 如果你不只执行一次此程序，你也可以将其编译后以备不时之需，命令如下： go build helloworld.go ​ 之后会生成一个名为helloworld的可执行二进制文件，你可以通过如下方式运行它： ./helloworld ​ 控制台会输出Hello World ​ 接下来我们来谈一下helloworld.go程序本身: ​ Go语言的代码通过package来组织，你可以将其理解为其他语言中的libraries或者modules。一个package下由同一目录下一个或多个.go文件共同构成。每个.go文件都以package声明开始，紧接着使用import关键字对一系列需要的包进行导入。之后执行存在在.go文件中的代码逻辑。 ​ Go的标准库提供了100多个包，例如输入、输出、排序以及文本处理。比如helloworld.go中的fmt包，含有格式化输出、接收输入的函数。Println是fmt包中的一个基础函数，可以打印以空格间隔的一个或多个值，并在最后添加一个换行符，从而输出一整行。值得注意的是Go语言要求必须导入恰当的包，缺少了必要的包或导入了不需要的包，程序都无法编译通过。 ​ main包是整个程序执行时的入口。通过调用其他函数来达成代码逻辑。 ​ ","date":"2021-07-23","objectID":"/go-%E5%85%A5%E9%97%A8/:1:0","tags":null,"title":"Go入门","uri":"/go-%E5%85%A5%E9%97%A8/"}]